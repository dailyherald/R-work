labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(2, units = "mm"),
keywidth = unit(75 / length(labels), units = "mm"),
title.position = 'top',
# I shift the labels around, the should be placed
# exactly at the right end of each legend key
title.hjust = 0.5,
#label.hjust = 1,
nrow = 1,
byrow = T,
# Can reverse the legend if that's clearer
reverse = F,
label.position = "bottom"
)
)
map
theme_map <- function(...) {
theme_fivethirtyeight() +
theme(
plot.background = element_rect(fill = "white"),
plot.title = element_text(size = 24),
plot.subtitle = element_text(size = 16),
plot.caption=element_text(size=12, hjust=0),
legend.position="right",
legend.direction="vertical",
legend.background = element_rect(fill = "white"),
legend.title=element_text(size=10, face="bold"),
legend.text=element_text(size=10),
legend.text.align = 0, # 0 = left, 1 = right
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
...
)
}
map <- ggplot(ill_f,
aes(long, lat, group = group, fill = Rchg_65over_quantiles)
) +
geom_polygon( color = "white", size = 0.15) + coord_map() + theme_map()
map <- map + labs(
title="65 and over", # your headline
subtitle="Percent change in the rate\nper 1,000 of persons aged 65\nand over, 2010 - 2016",
caption="\nSource: Census.gov",
fill = "PERCENT CHANGE")
map <- map +
theme(legend.position = "top", legend.direction = "horizontal") +
scale_fill_manual(
values = c("#a6611a", "#dfc27d", "#f6e8c3", "#80cdc1", "#018571"),
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(2, units = "mm"),
keywidth = unit(75 / length(labels), units = "mm"),
title.position = 'top',
# I shift the labels around, the should be placed
# exactly at the right end of each legend key
title.hjust = 0.5,
#label.hjust = 1,
nrow = 1,
byrow = T,
# Can reverse the legend if that's clearer
reverse = F,
label.position = "bottom"
)
)
map
labels2 <- c()
for(idx in 1:length(quantiles)){
labels2 <- c(labels2, paste0(round(quantiles[idx], 1),
"%-\n",
round(quantiles[idx + 1], 1),
"%"
))
}
labels2 <- labels2[1:length(labels2)-1]
ill_f$Rchg_65over_brks <- cut(ill_f$Rchg_65over,
breaks = quantiles,
include.lowest = TRUE,
labels = labels2)
brks_scale <- levels(ill_f$Rchg_65over_brks)
labels_scale <-brks_scale
labels_scale
map <- ggplot(ill_f,
aes(long, lat, group = group, fill = Rchg_65over_quantiles)
) +
geom_polygon( color = "white", size = 0.15) + coord_map() + theme_map()
map <- map + labs(
title="65 and over", # your headline
subtitle="Percent change in the rate\nper 1,000 of persons aged 65\nand over, 2010 - 2016",
caption="\nSource: Census.gov",
fill = "PERCENT CHANGE")
map <- map +
theme(legend.position = "top", legend.direction = "horizontal") +
scale_fill_manual(
values = c("#a6611a", "#dfc27d", "#f6e8c3", "#80cdc1", "#018571"),
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(2, units = "mm"),
keywidth = unit(75 / length(labels), units = "mm"),
title.position = 'top',
# I shift the labels around, the should be placed
# exactly at the right end of each legend key
title.hjust = 0.5,
#label.hjust = 1,
nrow = 1,
byrow = T,
# Can reverse the legend if that's clearer
reverse = F,
label.position = "bottom"
)
)
map
labels2 <- c()
for(idx in 1:length(quantiles)){
labels2 <- c(labels2,round(quantiles[idx], 2))
}
labels2 <- labels2[1:length(labels2)-1]
ill_f$Rchg_65over_brks <- cut(ill_f$Rchg_65over,
breaks = quantiles,
include.lowest = TRUE,
labels = labels2)
brks_scale <- levels(ill_f$Rchg_65over_brks)
labels_scale <-brks_scale
labels_scale
map <- ggplot(ill_f,
aes(long, lat, group = group, fill = Rchg_65over_quantiles)
) +
geom_polygon( color = "white", size = 0.15) + coord_map() + theme_map()
map <- map + labs(
title="65 and over", # your headline
subtitle="Percent change in the rate\nper 1,000 of persons aged 65\nand over, 2010 - 2016",
caption="\nSource: Census.gov",
fill = "PERCENT CHANGE")
map <- map +
theme(legend.position = "top", legend.direction = "horizontal") +
scale_fill_manual(
values = c("#a6611a", "#dfc27d", "#f6e8c3", "#80cdc1", "#018571"),
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(2, units = "mm"),
keywidth = unit(75 / length(labels), units = "mm"),
title.position = 'top',
# I shift the labels around, the should be placed
# exactly at the right end of each legend key
title.hjust = 0.5,
#label.hjust = 1,
nrow = 1,
byrow = T,
# Can reverse the legend if that's clearer
reverse = F,
label.position = "bottom"
)
)
map
labels2 <- c()
for(idx in 1:length(quantiles)){
labels2 <- c(labels2,round(quantiles[idx], 1),
"%")
}
labels2 <- labels2[1:length(labels2)-1]
ill_f$Rchg_65over_brks <- cut(ill_f$Rchg_65over,
breaks = quantiles,
include.lowest = TRUE,
labels = labels2)
labels2 <- c()
for(idx in 1:length(quantiles)){
labels2 <- c(labels2,round(quantiles[idx], 1),
"%")
}
labels2 <- labels2[1:length(labels2)-1]
ill_f$Rchg_65over_brks <- cut(ill_f$Rchg_65over,
breaks = quantiles,
include.lowest = TRUE,
labels = labels2)
labels2 <- c()
for(idx in 1:length(quantiles)){
labels2 <- c(labels2,paste0(round(quantiles[idx], 1),
"%")
)
}
labels2 <- labels2[1:length(labels2)-1]
ill_f$Rchg_65over_brks <- cut(ill_f$Rchg_65over,
breaks = quantiles,
include.lowest = TRUE,
labels = labels2)
brks_scale <- levels(ill_f$Rchg_65over_brks)
labels_scale <-brks_scale
labels_scale
map <- ggplot(ill_f,
aes(long, lat, group = group, fill = Rchg_65over_quantiles)
) +
geom_polygon( color = "white", size = 0.15) + coord_map() + theme_map()
map <- map + labs(
title="65 and over", # your headline
subtitle="Percent change in the rate\nper 1,000 of persons aged 65\nand over, 2010 - 2016",
caption="\nSource: Census.gov",
fill = "PERCENT CHANGE")
map <- map +
theme(legend.position = "top", legend.direction = "horizontal") +
scale_fill_manual(
values = c("#a6611a", "#dfc27d", "#f6e8c3", "#80cdc1", "#018571"),
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(2, units = "mm"),
keywidth = unit(75 / length(labels), units = "mm"),
title.position = 'top',
# I shift the labels around, the should be placed
# exactly at the right end of each legend key
title.hjust = 0.5,
#label.hjust = 1,
nrow = 1,
byrow = T,
# Can reverse the legend if that's clearer
reverse = F,
label.position = "bottom"
)
)
map
map <- ggplot(ill_f,
aes(long, lat, group = group, fill = Rchg_65over_quantiles)
) +
geom_polygon( color = "white", size = 0.15) + coord_map() + theme_map()
map <- map + labs(
title="65 and over", # your headline
subtitle="Percent change in the rate\nper 1,000 of persons aged 65\nand over, 2010 - 2016",
caption="\nSource: Census.gov",
fill = "PERCENT CHANGE")
map <- map +
theme(legend.position = "top", legend.direction = "horizontal") +
scale_fill_manual(
# viridis, magma, plasma or inferno
# (#) = number of breaks, [4:8] takes last 5
values = magma(8)[3:7],
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(2, units = "mm"),
keywidth = unit(75 / length(labels), units = "mm"),
title.position = 'top',
# I shift the labels around, the should be placed
# exactly at the right end of each legend key
title.hjust = 0.5,
#label.hjust = 1,
nrow = 1,
byrow = T,
# Can reverse the legend if that's clearer
reverse = F,
label.position = "bottom"
)
)
map
labels2 <- c()
for(idx in 1:length(quantiles)){
labels2 <- c(labels2,paste0(round(quantiles[idx], 1),
"%")
)
}
labels2
labels2 <- labels2[1:length(labels2)-1]
ill_f$Rchg_65over_brks <- cut(ill_f$Rchg_65over,
breaks = quantiles,
include.lowest = TRUE,
include.highest = TRUE,
labels = labels2)
brks_scale <- levels(ill_f$Rchg_65over_brks)
labels_scale <-brks_scale
labels_scale
ill_f$Rchg_65over_brks <- cut(ill_f$Rchg_65over,
breaks = quantiles,
include.lowest = FALSE,
labels = labels2)
brks_scale <- levels(ill_f$Rchg_65over_brks)
labels_scale <-brks_scale
labels_scale
labels2 <- c()
for(idx in 1:length(quantiles)){
labels2 <- c(labels2, paste0(round(quantiles[idx], 1),
"-\n",
round(quantiles[idx + 1], 1),
"%"
))
}
labels2 <- labels2[1:length(labels2)-1]
ill_f$Rchg_65over_brks <- cut(ill_f$Rchg_65over,
breaks = quantiles,
include.lowest = TRUE,
labels = labels2)
brks_scale <- levels(ill_f$Rchg_65over_brks)
labels_scale <-brks_scale
labels_scale
map <- ggplot(ill_f,
aes(long, lat, group = group, fill = Rchg_65over_quantiles)
) +
geom_polygon( color = "white", size = 0.15) + coord_map() + theme_map()
map <- map + labs(
title="65 and over", # your headline
subtitle="Percent change in the rate\nper 1,000 of persons aged 65\nand over, 2010 - 2016",
caption="\nSource: Census.gov",
fill = "PERCENT CHANGE")
map <- map +
theme(legend.position = "top", legend.direction = "horizontal") +
scale_fill_manual(
values = c("#a6611a", "#dfc27d", "#f6e8c3", "#80cdc1", "#018571"),
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(2, units = "mm"),
keywidth = unit(75 / length(labels), units = "mm"),
title.position = 'top',
# I shift the labels around, the should be placed
# exactly at the right end of each legend key
title.hjust = 0.5,
#label.hjust = 1,
nrow = 1,
byrow = T,
# Can reverse the legend if that's clearer
reverse = F,
label.position = "bottom"
)
)
map
labels2 <- c()
for(idx in 1:length(quantiles)){
labels2 <- c(labels2, paste0(round(quantiles[idx], 1),
" -\n",
round(quantiles[idx + 1], 1),
"%"
))
}
labels2 <- labels2[1:length(labels2)-1]
ill_f$Rchg_65over_brks <- cut(ill_f$Rchg_65over,
breaks = quantiles,
include.lowest = TRUE,
labels = labels2)
brks_scale <- levels(ill_f$Rchg_65over_brks)
labels_scale <-brks_scale
labels_scale
map <- ggplot(ill_f,
aes(long, lat, group = group, fill = Rchg_65over_quantiles)
) +
geom_polygon( color = "white", size = 0.15) + coord_map() + theme_map()
map <- map + labs(
title="65 and over", # your headline
subtitle="Percent change in the rate\nper 1,000 of persons aged 65\nand over, 2010 - 2016",
caption="\nSource: Census.gov",
fill = "PERCENT CHANGE")
map <- map +
theme(legend.position = "top", legend.direction = "horizontal") +
scale_fill_manual(
values = c("#a6611a", "#dfc27d", "#f6e8c3", "#80cdc1", "#018571"),
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(2, units = "mm"),
keywidth = unit(75 / length(labels), units = "mm"),
title.position = 'top',
# I shift the labels around, the should be placed
# exactly at the right end of each legend key
title.hjust = 0.5,
#label.hjust = 1,
nrow = 1,
byrow = T,
# Can reverse the legend if that's clearer
reverse = F,
label.position = "bottom"
)
)
map
# check libraries
library(readr)
library(rgdal)
library(dplyr)
library(ggplot2)
library(ggmap)
library(ggthemes)
# Loading shapefiles
ill <- readOGR(dsn = "ILcounties/simplified.shp")
# divides things into slots geodata in one, data in another etc
# Access it with @, not $
head(ill@data, n = 10)
summary(ill@data)
# check the projection
ill@proj4string
plot(ill)
census16 <- read.csv("census2016_all.csv", stringsAsFactors = FALSE)
head(census16)
summary(census16)
# let's see if we can join by county name
ill$NAMELSAD10 %in% census16$Place
# Now join
ill@data <- left_join(ill@data, census16, by = c('NAMELSAD10' = 'Place'))
head(ill@data)
summary(ill@data)
names(ill)
# let's write the data to a csv and read it back again
write_csv(ill@data,"illdata.csv")
census16 <- read.csv("illdata.csv", stringsAsFactors = FALSE)
head(census16)
# let's get rid of a few columns we don't need
census16$STATEFP10=NULL
census16$COUNTYFP10=NULL
census16$COUNTYNS10=NULL
head(census16)
# now we have the census data with the geoid attached to each county
# working with ggplot means the data has to be saved in a different way.
ill_f <- fortify(ill, region="GEOID10")
# let's look at the dataframe
head(ill_f, n = 5)
# Fortify looks like it takes each polygon in a shapefile
# and changes it to a groupable set of points
# groupable based on ID
# Once we have this dataframe, we have to rejoin the
# data associated with it.
ill_f$id <- as.numeric(as.character(ill_f$id))
class(ill_f$id)
class(census16$GEOID10)
ill_f <- left_join(ill_f, census16, by = c('id' = 'GEOID10'))
head(ill_f, n=5)
names(ill_f)
summary(ill_f$rate_16under19)
quantile(ill_f$rate_16under19, probs = seq(0, 1, .25))
# let's write the data to a csv
write_csv(ill_f,"ill_f.csv")
knit_with_parameters('~/Desktop/R-work/R_graphics/15_AllTogether.Rmd')
# check libraries
library(readr)
library(rgdal)
library(dplyr)
library(RColorBrewer) # for my color ramp
library(viridis)
library(scales)
library(ggplot2)
library(ggmap)
library(ggthemes)
ill_f <- read.csv("ill_f.csv", stringsAsFactors = FALSE)
head(ill_f)
summary(ill_f)
names(ill_f)
summary(ill_f$chg_total)
quantile(ill_f$chg_total, probs = seq(0, 1, .2))
# map using ggplot2
map <- ggplot(ill_f,
aes(long, lat, group = group, fill = chg_total)
) +
geom_polygon( color = "black", size = 0.25) + coord_map() + theme_fivethirtyeight()
map <- map + labs(
title="title", # your headline
subtitle="subtitle",
caption="\nSource: Census.gov",
fill = "legend\ntitle")
map <- map + theme(
plot.background = element_rect(fill = "white"),
plot.title = element_text(size = 32),
plot.subtitle = element_text(size = 20),
plot.caption=element_text(size=14, hjust=0),
legend.position="right",
legend.direction="vertical",
legend.background = element_rect(fill = "white"),
legend.title=element_text(size=16),
legend.text=element_text(size=12),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank()
)
# for a sequential color scheme
map <- map + scale_fill_distiller(palette = "Blues",
direction = 1,
breaks = pretty_breaks(n=7)
)
map
# for a diverging color scheme - needs midpoint and hi/low
map <- map + scale_fill_gradient2(low="#a6611a",
mid="#ffffcc",
high="#018571",
midpoint=0,
limits=c(-21.2,8.2),
breaks = pretty_breaks(n=7)
)
map
# using viridis color scale
map <- map + scale_fill_viridis(option = "B",# A, B, C or D
direction=1,
breaks = pretty_breaks(n=7)
)
map
map <- map + scale_fill_gradient2(low="#a6611a",
mid="#ffffcc",
high="#018571",
midpoint=0,
limits=c(-21.2,8.2),
breaks = pretty_breaks(n=7)
)
map
map <- map + scale_fill_distiller(palette = "Blues",
direction = 1,
breaks = pretty_breaks(n=7)
)
map

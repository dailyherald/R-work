color=Genre,
size=BudgetMillions) +
facet_grid(Genre~Year) +
geom_smooth(fill=NA)
w + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre,
size=BudgetMillions) +
facet_grid(Genre~Year) +
geom_smooth()
w + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre,
size=BudgetMillions,
alpha=0.5) +
facet_grid(Genre~Year) +
geom_smooth()
w + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre,
size=BudgetMillions,
alpha=I(0.5)) +
facet_grid(Genre~Year) +
geom_smooth()
w + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre,
size=BudgetMillions,
alpha=0.35) +
facet_grid(Genre~Year) +
geom_smooth()
w + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre,
size=BudgetMillions,
alpha=0.35,
ylim=c(0,100)) +
facet_grid(Genre~Year) +
geom_smooth()
w + geom_point(ylim=c(0,100)) +
aes(x=CriticRating,
y=AudienceRating,
color=Genre,
size=BudgetMillions,
alpha=0.35) +
facet_grid(Genre~Year) +
geom_smooth()
m <- ggplot(mov)
m + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre) + xlim(50,100)
w <- ggplot(mov)
w + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre,
size=BudgetMillions,
alpha=0.35) +
facet_grid(Genre~Year) +
geom_smooth() +
ylim(0,100)
m <- ggplot(mov)
m + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre) + xlim(50,100)
m <- ggplot(mov)
m + geom_histogram() +
aes(fill=Genre) +
coord_cartesian(ylim=c(0,50))
m <- ggplot(mov)
m + geom_histogram(binwidth = 10,
aes(fill=Genre),
color="white",
size=0.3) +
coord_cartesian(ylim=c(0,50))
m + geom_histogram(binwidth = 10,
aes(x=BudgetMillions,
fill=Genre),
color="white",
size=0.3) +
coord_cartesian(ylim=c(0,50))
w <- ggplot(mov)
w + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre,
size=BudgetMillions,
alpha=0.35) +
facet_grid(Genre~Year) +
geom_smooth() +
ylim(0,100)
m <- ggplot(mov)
m + geom_histogram(binwidth = 10,
aes(x=BudgetMillions,
fill=Genre),
color="white",
size=0.3) +
coord_cartesian(ylim=c(0,50))
w2 <- ggplot(mov)
w2 + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre,
size=BudgetMillions,
alpha=0.35) +
facet_grid(Genre~Year) +
geom_smooth() +
coord_cartesian(ylim(0,100) )
w2 + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre,
size=BudgetMillions,
alpha=0.35) +
facet_grid(Genre~Year) +
geom_smooth() +
coord_cartesian(ylim=c(0,100) )
o <- ggplot(mov)
o + geom_histogram(binwidth = 10,
aes(x=BudgetMillions,
fill=Genre),
color="white",
size=0.3)
o <- ggplot(mov) + geom_histogram(binwidth = 10,
aes(x=BudgetMillions,
fill=Genre),
color="white",
size=0.3)
o
o + xlab("Money Axis") +
ylab("Number of Movies")
o + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color="Dark Green",
size=30)) +
theme(axis.title.y = element_text(color="Red",
size=30))
o + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color="Dark Green",
size=20)) +
theme(axis.title.y = element_text(color="Red",
size=20))
o + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color="Dark Green",
size=20),
axis.title.y = element_text(color="Red",
size=20),
axis.text = element_text(size=10))
o + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color="Dark Green",
size=20),
axis.title.y = element_text(color="Red",
size=20),
axis.text = element_text(size=10),
legend.position = c(1,1))
o + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color="Dark Green",
size=20),
axis.title.y = element_text(color="Red",
size=20),
axis.text = element_text(size=10),
legend.position = c(1,1),
legend.justification = c(1,1))
o + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color="Dark Green",
size=20),
axis.title.y = element_text(color="Red",
size=20),
axis.text = element_text(size=10),
legend.position = c(1,1),
legend.justification = c(.9,.9))
o + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color="Dark Green",
size=20),
axis.title.y = element_text(color="Red",
size=20),
axis.text = element_text(size=10),
legend.position = c(1,1),
legend.justification = c(1.2,1.2))
o + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color="Dark Green",
size=20),
axis.title.y = element_text(color="Red",
size=20),
axis.text = element_text(size=10),
legend.position = c(1,1),
legend.justification = c(1.1,1.2))
o + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color="Dark Green",
size=20),
axis.title.y = element_text(color="Red",
size=20),
axis.text = element_text(size=10),
legend.position = c(1,1),
legend.justification = c(1.2,1.1))
getwd()
setwd("~/Desktop/R-work/R coursework/udemy/section 6")
mov <- read.csv("Section6-Homework-Data.csv")
#Data Exploration
head(mov) #top rows
summary(mov) #column summaries
str(mov) #structure of the dataset
colnames(mov)
#Activate GGPlot2
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=mov, aes(x=Day.of.Week)) + geom_bar()
View(mov)
filt <- (mov$Genre == "action") | (mov$Genre == "adventure") | (mov$Genre == "animation") | (mov$Genre == "comedy") | (mov$Genre == "drama")
filt2 <- (mov$Studio == "Buena Vista Studios") | (mov$Studio == "WB") | (mov$Studio == "Fox") | (mov$Studio == "Universal") | (mov$Studio == "Sony") | (mov$Studio == "Paramount Pictures")
mov2 <- mov[filt & filt2,]
View(mov2)
p <- ggplot(data=mov2, aes(x=Genre, y=Gross...US))
p #Nothing happens. We need a geom.
p + geom_point()
p + boxplot()
p + geom_boxplot()
p + geom_boxplot() +
geom_jitter()
p + geom_boxplot() +
geom_points()
p + geom_boxplot() +
geom_point()
p + geom_boxplot() +
geom_jitter()
p + geom_jitter() +
geom_boxplot()
p + geom_jitter() +
geom_boxplot(alpha=0.7)
p + geom_jitter(aes(size=Budget...mill., color=Studio)) +
geom_boxplot(alpha=0.7)
p + geom_jitter(aes(size=Budget...mill., color=Studio)) +
geom_boxplot(alpha=0.7, outlier.colour = NA)
q <- p + geom_jitter(aes(size=Budget...mill., color=Studio)) +
geom_boxplot(alpha=0.7, outlier.colour = NA)
q
q <- q +
axis.title.x("Genre") + #x axis title
axis.title.y("Gross % US") + #y axis title
title("Domestic Gross % by Genre") #plot title
q <- q +
axis.label.x("Genre") + #x axis title
axis.lable.y("Gross % US") + #y axis title
title("Domestic Gross % by Genre") #plot title
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
title("Domestic Gross % by Genre") #plot title
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
main("Domestic Gross % by Genre") #plot title
q
q
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") #+ #y axis title
q
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
title("Domestic Gross % by Genre") #plot title
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
ggtitle("Domestic Gross % by Genre") #plot title
q
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
_ = element_text(colour="Blue", size=30),
_ = element_text(colour="Blue", size=30),
#Axes texts:
_ = element_text(size=20),
_ = element_text(size=20),
#Plot title:
_ = element_text(colour="Black",
size=40),
#Legend title:
_ = element_text(size=20),
#Legend text
_ = element_text(size=12)
)
?theme
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=30),
axis.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
#Plot title:
title = element_text(colour="Black",
size=40),
#Legend title:
legend.title = element_text(size=20),
#Legend text
legend.text = element_text(size=12)
)
q
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=20),
axis.title.y = element_text(colour="Blue", size=20),
#Axes texts:
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
#Plot title:
title = element_text(colour="Black",
size=30),
#Legend title:
legend.title = element_text(size=10),
#Legend text
legend.text = element_text(size=12)
)
q
q$labels$size = "Budget $M"
q
# Box plot grosss % us v genre
# jitter in background, budget size of dot
# color = studio
#Import the Data
getwd()
setwd("~/Desktop/R-work/R coursework/udemy/section 6")
mov <- read.csv("Section6-Homework-Data.csv")
#Data Exploration
head(mov) #top rows
summary(mov) #column summaries
str(mov) #structure of the dataset
colnames(mov)
#Activate GGPlot2
#install.packages("ggplot2")
library(ggplot2)
#{Offtopic} This Is A Cool Insight:
ggplot(data=mov, aes(x=Day.of.Week)) + geom_bar()
#Notice? No movies are released on a Monday. Ever.
#Now we need to filter our dataset to leave only the
#Genres and Studios that we are interested in
#We will start with the Genre filter and use the Logical 'OR'
#operator to select multiple Genres:
filt <- (mov$Genre == "action") | (mov$Genre == "adventure") | (mov$Genre == "animation") | (mov$Genre == "comedy") | (mov$Genre == "drama")
#Now let's do the same for the Studio filter:
filt2 <- (mov$Studio == "Buena Vista Studios") | (mov$Studio == "WB") | (mov$Studio == "Fox") | (mov$Studio == "Universal") | (mov$Studio == "Sony") | (mov$Studio == "Paramount Pictures")
#Apply the row filters to the dataframe
mov2 <- mov[filt & filt2,]
#Prepare the plot's data and aes layers
#Note we did not rename the columns.
#Use str() or summary() to fin out the correct column names
p <- ggplot(data=mov2, aes(x=Genre, y=Gross...US))
p #Nothing happens. We need a geom.
#Add a Point Geom Layer
p + geom_point()
#Add a boxplot instead of the points
p + geom_boxplot()
#Notice that outliers are part of the boxplot layer
#We will use this observation later (*)
#Add points
p + geom_boxplot() +
geom_point()
#Not what we are after
#Replace points with jitter
p + geom_boxplot() +
geom_jitter()
#Place boxplot on top of jitter
p + geom_jitter() +
geom_boxplot()
#Add boxplot transparency
p + geom_jitter() +
geom_boxplot(alpha=0.7)
#Good. Now add size and colour to the points:
p + geom_jitter(aes(size=Budget...mill., color=Studio)) +
geom_boxplot(alpha=0.7)
#See the remaining black points? Where are they from?
#They are part of the boxplot - Refer to our observation (*) above
#Let's remove them:
p + geom_jitter(aes(size=Budget...mill., color=Studio)) +
geom_boxplot(alpha=0.7, outlier.colour = NA)
#Let's "Save" our progress by placing it into a new object:
q <- p + geom_jitter(aes(size=Budget...mill., color=Studio)) +
geom_boxplot(alpha=0.7, outlier.colour = NA)
q
#Non-data ink
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
ggtitle("Domestic Gross % by Genre") #plot title
q
#HINT: for the next part use ?theme if you need to
#refresh which parameters are responsible for what
?theme
#Theme
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=20),
axis.title.y = element_text(colour="Blue", size=20),
#Axes texts:
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
#Plot title:
title = element_text(colour="Black",
size=30),
#Legend title:
legend.title = element_text(size=10),
#Legend text
legend.text = element_text(size=12)
)
q
#Final touch. We haven't discussed this in the course,
#However this is how you can change individual legend titles:
q$labels$size = "Budget $M"
q
#Well done!
mov <- read.csv("Movie-Ratings.csv")
summary(mov)
str(mov)
colnames(mov) <- c("Film","Genre","CriticRating","AudienceRating","BudgetMillions","Year")
summary(mov)
str(mov)
mov$Year <- factor(mov$Year)
str(mov)
library(ggplot2)
p <- ggplot(data=mov) +
aes(x=CriticRating, y=AudienceRating)
p + geom_point()
# can override previous values without
# changing the value of p
p + geom_point(aes(x=BudgetMillions))
# mapping vs. setting
# you map a color to a variable
# and it shows up in a legend
p + geom_point(aes(color=Genre))
# you set a color without aes
# and no legend shows up
p + geom_point(color="dark green")
# here's mapping and setting
# you set a color and transparency without aes
# but map it by size, so the legend shows there
p + geom_point(aes(size=BudgetMillions),
color="dark green",
alpha=I(.5))
# histograms
s <- ggplot(data=mov) +
aes(x=BudgetMillions)
s + geom_histogram(binwidth=10,
aes(fill=Genre),
color="White", size=0.25)
# density chart
s + geom_density(aes(fill=Genre),
position="stack",
color="White", size=0.25)
# statistical transformations
u <- ggplot(data=mov)
u + geom_point() + aes(x=CriticRating,
y=AudienceRating,
color=Genre) +
geom_smooth(fill=NA)
# box plots
bx <- ggplot(data=mov)
bx + geom_jitter(size=0.5) +
geom_boxplot(size=0.8) +
aes(x=Genre, y=AudienceRating,
color=Genre, alpha=.5)
bx + geom_jitter(size=0.5) +
geom_boxplot(size=0.8) +
aes(x=Genre, y=CriticRating,
color=Genre, alpha=.5)
# facets
ft <- ggplot(mov)
ft + geom_histogram(binwidth=10,
aes(x=BudgetMillions,
fill=Genre),
color="White",
size=0.3) +
facet_grid(Genre~., scales="free")
#--------------
# sets x/y limits, cuts content
w <- ggplot(mov)
w + geom_point() +
aes(x=CriticRating,
y=AudienceRating,
color=Genre,
size=BudgetMillions,
alpha=0.35) +
facet_grid(Genre~Year) +
geom_smooth() +
ylim(0,100)

stat_smooth(method="lm") +
facet_grid(factor(Officer_major) ~ factor(year))
# the more factors you add, the more complicated the chart
# In this case we divided the data by years
# and then for each year it was divided by major/minor injuries
# Be careful with this - it can get very hard to understand
# very quickly. But it can also provide some good insights.
# In this case, we can see the number of major injuries
# decreased from the first year and stayed low.
# Imagine if this were a dataset with thousands of numbers
# and you can see how valuable this function can be
# So let's look create the plot without any factors
# First let's take a closer look at the correlation
fit_officer <- lm(force ~ Total_officer, data = dfLook)
summary(fit_officer)
# Lots to uppack here. Honestly, I am not qualified to
# explain in detail these more advanced statistic measures.
# What follows is a very over-simplified explanation.
# Generally, you want ...
# A) your Adjusted R-square to be as close to 1.00 as possible
#    here it's -0.04986. Minus is fine - negative correlation
#    But, only about 4.9 percentof the observations can be explained by
#    the relationship between the two data sets.
#    So not much of a relationship
# B) the p-value to be less that 0.05.
# HOWEVER: Don't expect too much out of these stats - we're using a very
# small dataset so it's not going to be very informative and may even
# cause confusing results. Look at the portion labeled Coefficients:
# C) Std. Error and t value. You want the t values to be as large
#    as possible versus the std errors. Neither are.
#    This is kind of like margin of error. If, for instance, a poll
#    says two candidates are at 51% vs. 49% and the margin of error is
#    five percentage points, that poll could be way off
# D) the Pr(>|t|) or p-value uses those T values and Error to compute the P-value
#    The top one is well under 0.05 (0.0081) which is good. It has ** which
#    denotes ( under signif.codes) that it's close to zero (***) in whether
#    the result is random versus signifcant
#    But the bottom one is 0.5052 with is really bad!
# ------
# Statistics is a science. Our purpose in graphing these
# values out is to see how the data relates to the
# regression line and maybe spot outliers. We will seldom use
# T values or R2 in our stories.
# But there's nothing wrong in knowing about these things. And in fact
# understanding when it's telling you that something's wrong can
# be very useful.
# Here's a link to a resource explaining what you see with the summary
# https://feliperego.github.io/blog/2015/10/23/Interpreting-Model-Output-In-R
# If you want to learn more about statistics, let me know. There's a
# good textbook I can recommend.
# Now let's draw the plot as we would if we
# were going to use it in print or online
#---------------------
# This function set styles for the chart
# Be sure to run it before you plot
theme_gfx <- function(...) {
theme_set(theme_get() + theme(text = element_text(family = 'Verdana', size= 12, lineheight=0.9))) +
theme(
# edit background colors
plot.background = element_blank(),
legend.background = element_blank(),
panel.background=element_rect(fill="#E5E5E5"),
strip.background=element_rect(fill="#E5E5E5"),
# modify grid and tick lines
panel.grid.major = element_line(size = .6, color="#D2D2D2"),
panel.grid.minor = element_line(size = .6, color="#D2D2D2", linetype = "dashed"),
axis.ticks = element_blank(),
# edit font sizes
plot.title = element_text(size = 27,face="bold"),
plot.subtitle = element_text(size = 18),
#legend.title=element_text(size = 13,face="bold"),
legend.text=element_text(size=14.7),
axis.title=element_text(size=15, face="bold"),
axis.text=element_text(size=13.5),
plot.caption=element_text(size=13.5, hjust=0),
strip.text = element_text(face="bold", size=13.5, hjust=0),
# This puts the legend across the top
legend.position="top",
legend.direction="horizontal",
# removes label for legend
legend.title = element_blank(),
...
)
}
#-----------------
# create the plot
officer <- ggplot(dfLook) +
aes(x=force,
y=Total_officer
) +
geom_point(stat="identity",
size = 3,
shape=21,
color="black",
aes(
fill=factor(year) ) # different colors for years
) +
geom_smooth(method=lm) +
theme_gfx()
# add all the titles.
officer <- officer +
labs(
title="Use of force and officer injuries", # your headline
subtitle="There's not much connection between \nuse of physical force and officer injuries",
x="USE OF FORCE INCIDENTS",
y="INJURIES TO OFFICERS",
caption="\nSource: Elgin police") +
scale_y_continuous(breaks=c(seq(0,10,2)) )
officer
# as we can see, there's a very slight correlation
# between the number of force incidents and injuries to
# officers. But the line only goes up very slightly - it's
# almost flat. And the 95% confidence rate is very wide
# So we can see there's not a significant correlation
# However, that doesn't mean there's not a story.
# Because we labeled the years, we can see that
# as they've increased the number of times they use
# physical response to resistance, that increase didn't
# result in a measureable increase in injuries - major or minor
# And that's a positive outcome.
# -----
# Now, in the space below, try looking at
# use of force and injuries to suspects
officer <- office + scale_colour_tableau() + scale_fill_tableau()
officer <- officer + scale_colour_tableau() + scale_fill_tableau()
officer
officer <- ggplot(dfLook) +
aes(x=force,
y=Total_officer
) +
geom_point(stat="identity",
size = 3,
shape=21,
#color="black",
aes(
fill=factor(year) ) # different colors for years
) +
geom_smooth(method=lm) +
theme_gfx()
officer <- officer +
labs(
title="Use of force and officer injuries", # your headline
subtitle="There's not much connection between \nuse of physical force and officer injuries",
x="USE OF FORCE INCIDENTS",
y="INJURIES TO OFFICERS",
caption="\nSource: Elgin police") +
scale_y_continuous(breaks=c(seq(0,10,2)) )
officer <- officer + scale_colour_tableau() + scale_fill_tableau()
officer
officer <- ggplot(dfLook) +
aes(x=force,
y=Total_officer
) +
geom_point(stat="identity",
size = 3,
shape=21,
color=factor(year),
aes(
fill=factor(year) ) # different colors for years
) +
geom_smooth(method=lm) +
theme_gfx()
?geom_point
officer <- ggplot(dfLook) +
aes(x=force,
y=Total_officer
) +
geom_point(stat="identity",
size = 3,
shape=21,
aes(
color="black",
fill=factor(year) ) # different colors for years
) +
geom_smooth(method=lm) +
theme_gfx()
officer <- officer +
labs(
title="Use of force and officer injuries", # your headline
subtitle="There's not much connection between \nuse of physical force and officer injuries",
x="USE OF FORCE INCIDENTS",
y="INJURIES TO OFFICERS",
caption="\nSource: Elgin police") +
scale_y_continuous(breaks=c(seq(0,10,2)) )
officer <- officer + scale_colour_tableau() + scale_fill_tableau()
officer
officer <- ggplot(dfLook) +
aes(x=force,
y=Total_officer
) +
geom_point(stat="identity",
size = 3,
shape=21,
aes(
color=factor(year),
fill=factor(year) ) # different colors for years
) +
geom_smooth(method=lm) +
theme_gfx()
officer <- officer +
labs(
title="Use of force and officer injuries", # your headline
subtitle="There's not much connection between \nuse of physical force and officer injuries",
x="USE OF FORCE INCIDENTS",
y="INJURIES TO OFFICERS",
caption="\nSource: Elgin police") +
scale_y_continuous(breaks=c(seq(0,10,2)) )
officer <- officer + scale_colour_tableau() + scale_fill_tableau()
officer
library(readr)
library(ggplot2)
library(ggthemes)
df <- read_csv("ElginUOF.csv")
dfsum <- data.frame(unclass(summary(df)), check.names = FALSE, stringsAsFactors = FALSE)
dfsum
head(df)
View(df)
View(df)
qplot(Total_RTR,
data=df,
fill=factor(year),
bins = 12
)
library(readr)
library(ggplot2)
library(ggthemes)
df <- read_csv("ElginUOF.csv")
dfsum <- data.frame(unclass(summary(df)), check.names = FALSE, stringsAsFactors = FALSE)
dfsum
df <-df[order(df$Year_Quarter),]
df$sort <- seq.int(nrow(df))
df$year <- as.numeric(as.character( substr(df$Year_Quarter, start=1, stop=4) ))
df$quarter <- substr(df$Year_Quarter, start=6, stop=7)
dfsum <- data.frame(unclass(summary(df)), check.names = FALSE, stringsAsFactors = FALSE)
qplot(Total_RTR,
data=df,
fill=factor(year),
bins = 12
)
View(df)
qplot(Total_RTR_incidents,
data=df,
fill=factor(year),
bins = 12
)
View(df)
qplot(Total_officer,
data=df,
fill=factor(year),
bins = 12
)
qplot(Total_suspect,
data=df,
fill=factor(year),
bins = 12
)
qplot(Total_suspect,
data=df,
fill=factor(year),
bins = 15
)
qplot(Total_suspect,
data=df,
fill=factor(year),
bins = 16
)
qplot(Total_suspect,
data=df,
fill=factor(year),
bins = 12
)
qplot(Total_officer,
data=dfLook,
fill=factor(year),
bins = 12
)
qplot(force,
data=dfLook,
fill=factor(year),
bins = 12
)
qplot(Total_officer, data=dfLook,
geom="density",
fill=factor(year),
color=factor(year),
linetype = factor(year),
alpha=I(.5)
)
qplot(force, data=dfLook,
geom="density",
fill=factor(year),
color=factor(year),
linetype = factor(year),
alpha=I(.5)
)
qplot(force,Total_officer,
data=dfLook,
xlab="UOF incidents",
ylab="officer injuried") +
stat_smooth(method="lm") +
facet_grid(. ~ factor(Officer_major))
qplot(Total_officer,
data=dfLook,
fill=factor(year),
bins = 12
)
qplot(Total_officer, data=dfLook,
geom="density",
fill=factor(year),
color=factor(year),
linetype = factor(year),
alpha=I(.5)
)
View(dfLook)
qplot(Total_officer,
data=dfLook,
fill=factor(year),
bins = 12
)
qplot(Total_officer, data=dfLook,
geom="density",
fill=factor(year),
color=factor(year),
linetype = factor(year),
alpha=I(.5)
)
qplot(force,
data=dfLook,
fill=factor(year),
bins = 12
)
qplot(force, data=dfLook,
geom="density",
fill=factor(year),
color=factor(year),
linetype = factor(year),
alpha=I(.5)
)
qplot(force,Total_officer,
data=dfLook,
xlab="UOF incidents",
ylab="officer injuried") +
stat_smooth(method="lm")
fit_officer <- lm(force ~ Total_officer, data = dfLook)
summary(fit_officer)
qplot(force,Total_officer,
data=dfLook,
xlab="UOF incidents",
ylab="officer injuried") +
stat_smooth(method="lm") +
facet_grid(. ~ factor(Officer_major))
qplot(force,Total_officer,
data=dfLook) +
stat_smooth(method="lm") +
facet_grid(. ~ factor(Officer_major))
qplot(force,Total_officer,
data=dfLook) +
stat_smooth(method="lm") +
facet_grid(. ~ factor(year))
qplot(force,Total_officer,
data=dfLook,
xlab="UOF incidents",
ylab="officer injuried") +
stat_smooth(method="lm") +
facet_grid(factor(Officer_major) ~ factor(year))
theme_gfx <- function(...) {
theme_set(theme_get() + theme(text = element_text(family = 'Verdana', size= 12, lineheight=0.9))) +
theme(
# edit background colors
plot.background = element_blank(),
legend.background = element_blank(),
panel.background=element_rect(fill="#E5E5E5"),
strip.background=element_rect(fill="#E5E5E5"),
# modify grid and tick lines
panel.grid.major = element_line(size = .6, color="#D2D2D2"),
panel.grid.minor = element_line(size = .6, color="#D2D2D2", linetype = "dashed"),
axis.ticks = element_blank(),
# edit font sizes
plot.title = element_text(size = 27,face="bold"),
plot.subtitle = element_text(size = 18),
#legend.title=element_text(size = 13,face="bold"),
legend.text=element_text(size=14.7),
axis.title=element_text(size=15, face="bold"),
axis.text=element_text(size=13.5),
plot.caption=element_text(size=13.5, hjust=0),
strip.text = element_text(face="bold", size=13.5, hjust=0),
# This puts the legend across the top
legend.position="top",
legend.direction="horizontal",
# removes label for legend
legend.title = element_blank(),
...
)
}
officer <- ggplot(dfLook) +
aes(x=force,
y=Total_officer
) +
geom_point(stat="identity",
size = 3,
shape=21,
aes(
color=factor(year),
fill=factor(year) ) # different colors for years
) +
geom_smooth(method=lm) +
theme_gfx()
officer <- officer +
labs(
title="Use of force and officer injuries", # your headline
subtitle="There's not much connection between \nuse of physical force and officer injuries",
x="USE OF FORCE INCIDENTS",
y="INJURIES TO OFFICERS",
caption="\nSource: Elgin police") +
scale_y_continuous(breaks=c(seq(0,10,2)) )
officer <- officer + scale_colour_tableau() + scale_fill_tableau()
officer
officer <- ggplot(dfLook) +
aes(x=force,
y=Total_officer
) +
geom_point(stat="identity",
size = 3,
shape=21,
aes(
color=factor(year),
fill=factor(year) ) # different colors for years
) +
geom_smooth(method=lm,se=FALSE) +
theme_gfx()
officer <- officer +
labs(
title="Use of force and officer injuries",
subtitle="There's not much connection between \nuse of physical force and officer injuries",
x="USE OF FORCE INCIDENTS",
y="INJURIES TO OFFICERS",
caption="\nSource: Elgin police") +
scale_y_continuous(breaks=c(seq(0,10,2)) )
officer <- officer + scale_colour_tableau() + scale_fill_tableau()
officer
officer <- ggplot(dfLook) +
aes(x=force,
y=Total_officer
) +
geom_point(stat="identity",
size = 3,
shape=21,
aes(
color=factor(year),
alpha=I(.5),
fill=factor(year) )
) +
geom_smooth(method=lm,se=FALSE) +
theme_gfx()
officer <- officer +
labs(
title="Headline",
subtitle="Intro",
x="USE OF FORCE INCIDENTS",
y="INJURIES TO OFFICERS",
caption="\nSource: Elgin police") +
scale_y_continuous(breaks=c(seq(0,10,2)) )
officer <- officer + scale_colour_tableau() + scale_fill_tableau()
officer
officer <- ggplot(dfLook) +
aes(x=force,
y=Total_officer
) +
geom_point(stat="identity",
size = 3,
shape=21,
aes(
color=factor(year),
alpha=I(.5),
fill=factor(year) )
) +
geom_smooth(method=lm,se=FALSE) +
theme_gfx()
officer <- officer +
labs(
title="Headline",
subtitle="Intro",
x="USE OF FORCE INCIDENTS",
y="INJURIES TO OFFICERS",
caption="\nSource: Elgin police") +
scale_y_continuous(breaks=c(seq(0,10,2)) )
officer <- officer + scale_colour_tableau() + scale_fill_tableau()
officer
officer <- ggplot(dfLook) +
aes(x=force,
y=Total_officer
) +
geom_point(stat="identity",
size = 3,
shape=21,
alpha=I(.5),
aes(
color=factor(year),
fill=factor(year) )
) +
geom_smooth(method=lm,se=FALSE) +
theme_gfx()
officer <- officer +
labs(
title="Headline",
subtitle="Intro",
x="USE OF FORCE INCIDENTS",
y="INJURIES TO OFFICERS",
caption="\nSource: Elgin police") +
scale_y_continuous(breaks=c(seq(0,10,2)) )
officer <- officer + scale_colour_tableau() + scale_fill_tableau()
officer

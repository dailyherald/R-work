fill = set) +
geom_area(stat="identity") +
theme_gfx()
# Let's customize the x scale
# Remember \n = a line break
pArea <- pArea + scale_x_discrete(
labels=c("1Q\n2014","2Q","3Q","4Q","1Q\n2015","2Q","3Q","4Q","1Q\n2016","2Q","3Q","4Q")
)
# Let's also customize the y scale
# we set the min and max, then where breaks should be
pArea <- pArea +
scale_y_continuous(breaks=c(seq(0,60,5)) )
# add all the titles.
pArea <- pArea + labs(
title="Response to resistance", # your headline
subtitle="Elgin police have increased their use of\nnon-lethal force in response to resistance.",
x="YEAR, QUARTER",
y="NUMBER PER QUARTER",
caption="\nNote: Show of Force and Use of Force are incidents where \npolice only warned or only used force in repsonse to resistance. \nTransition is incidents where police showed then used force. \nSource: Elgin police")
# color scheme - comment out for B/W PDF
pArea <- pArea + scale_colour_tableau() + scale_fill_tableau()
# make B/W PDF - remember to change name of file!
#pArea <- pArea + scale_colour_grey(start = 0, end = 0.75) + scale_fill_grey(start = 0, end = 0.75)
pArea
#----- End plot --------------
#dev.off()
# The code in this file is described
# in html files of the same name
# load the libraries
library(readr)
library(ggplot2)
library(ggthemes)
# bring in the data we worked worked with
df <- read_csv("dfsubset.csv")
#---------------------
# For windows devices only
# windowsFonts(Verdana=windowsFont('Verdana'))
# This function set styles for the chart
# Be sure to run it before you plot
theme_gfx <- function(...) {
theme_set(theme_get() + theme(text = element_text(family = 'Verdana', size= 12, lineheight=0.9))) +
theme(
# edit background colors
plot.background = element_blank(),
legend.background = element_blank(),
panel.background=element_rect(fill="#E5E5E5"),
strip.background=element_rect(fill="#E5E5E5"),
# modify grid and tick lines
panel.grid.major = element_line(size = .6, color="#D2D2D2"),
panel.grid.minor = element_line(size = .6, color="#D2D2D2", linetype = "dashed"),
axis.ticks = element_blank(),
# edit font sizes
plot.title = element_text(size = 27,face="bold"),
plot.subtitle = element_text(size = 18),
#legend.title=element_text(size = 13,face="bold"),
legend.text=element_text(size=14.7),
axis.title=element_text(size=15, face="bold"),
axis.text=element_text(size=13.5),
plot.caption=element_text(size=13.5, hjust=0),
strip.text = element_text(face="bold", size=13.5, hjust=0),
# This puts the legend across the top
legend.position="top",
legend.direction="horizontal",
# removes label for legend
legend.title = element_blank(),
...
)
}
#-----Insert plot here -------------
pArea <- ggplot(df) +
aes(x = Year_Quarter,
y = value,
group = set,
fill = set) +
geom_area(stat="identity") +
theme_gfx()
# Let's customize the x scale
# Remember \n = a line break
pArea <- pArea + scale_x_discrete(
labels=c("1Q\n2014","2Q","3Q","4Q","1Q\n2015","2Q","3Q","4Q","1Q\n2016","2Q","3Q","4Q")
)
# Let's also customize the y scale
# we set the min and max, then where breaks should be
pArea <- pArea +
scale_y_continuous(breaks=c(seq(0,60,5)) )
# add all the titles.
pArea <- pArea + labs(
title="Response to resistance", # your headline
subtitle="Elgin police have increased their use of\nnon-lethal force in response to resistance.",
x="YEAR, QUARTER",
y="NUMBER PER QUARTER",
caption="\nNote: Show of Force and Use of Force are incidents where \npolice only warned or only used force in repsonse to resistance. \nTransition is incidents where police showed then used force. \nSource: Elgin police")
# color scheme - comment out for B/W PDF
pArea <- pArea + scale_colour_tableau() + scale_fill_tableau()
# make B/W PDF - remember to change name of file!
#pArea <- pArea + scale_colour_grey(start = 0, end = 0.75) + scale_fill_grey(start = 0, end = 0.75)
pArea
#----- End plot --------------
# Let's load our new dataframe
library(readr)
df <- read_csv("dfsubset.csv")
# load in ggplot and themes
library(ggplot2)
library(ggthemes)
#---------------------
# This function set styles for the chart
# Be sure to run it before you plot
theme_gfx <- function(...) {
theme_fivethirtyeight() +
theme(
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
plot.title = element_text(size = 30),
plot.subtitle = element_text(size = 18),
legend.text=element_text(size=15),
axis.title=element_text(size=15, face="bold"),
axis.text=element_text(size=13),
plot.caption=element_text(size=12, hjust=0),
# This puts the legend across the top
legend.position="top",
legend.direction="horizontal",
# removes label for legend
legend.title = element_blank(),
...
)
}
#----Set up plot for print and online --------
#dev.cur()
#pdf(file="ggplotScatter.pdf", width = 7, height = 6)
#png(filename = "ggplotScatter.png",width = 600, height = 500, units = "px")
#-----Insert plot here -------------
pScat <- ggplot(df) +
aes(Year_Quarter,
value,
color = set) +
geom_point(stat="identity") +
theme_gfx()
# alternative dots - larger with white outline note how we have t
# to change the way we specify the fill color of the dots
#pScat <- ggplot(df) +
#  aes(Year_Quarter,
#      value,
#      fill = set) +
#  geom_point(stat="identity",
#             shape = 21,
#             size=3,
#             color = "white") +
#  theme_gfx()
# Note that there's another way to set the size of points
# and that's by using another factor to do it.
# a good example can be found here:
# http://t-redactyl.io/blog/2016/02/creating-plots-in-r-using-ggplot2-part-6-weighted-scatterplots.html
# This plots ozone levels by day, but sets the size of
# the dots by the average wind speed for the day
# Let's customize the x scale
# Remember \n = a line break
pScat <- pScat + scale_x_discrete(
labels=c("1Q\n2014","2Q","3Q","4Q","1Q\n2015","2Q","3Q","4Q","1Q\n2016","2Q","3Q","4Q")
)
# Let's also customize the y scale
# we set the min and max, then where breaks should be
pScat <- pScat +
scale_y_continuous(breaks=c(seq(0,40,5)) )
# add all the titles.
pScat <- pScat + labs(
title="Response to resistance", # your headline
subtitle="Elgin police have increased their use of\nnon-lethal force in response to resistance.",
x="YEAR, QUARTER",
y="NUMBER PER QUARTER",
caption="\nNote: Show of Force and Use of Force are incidents where \npolice only warned or only used force in repsonse to resistance. \nTransition is incidents where police showed then used force. \nSource: Elgin police")
pScat
#----- End plot --------------
#dev.off()
View(df)
pScat <- ggplot(df) +
aes(Total_RTR,
value,
color = set) +
geom_point(stat="identity") +
theme_gfx()
pScat <- pScat + scale_x_discrete(
labels=c("1Q\n2014","2Q","3Q","4Q","1Q\n2015","2Q","3Q","4Q","1Q\n2016","2Q","3Q","4Q")
)
pScat <- pScat +
scale_y_continuous(breaks=c(seq(0,40,5)) )
pScat <- pScat + labs(
title="Response to resistance", # your headline
subtitle="Elgin police have increased their use of\nnon-lethal force in response to resistance.",
x="YEAR, QUARTER",
y="NUMBER PER QUARTER",
caption="\nNote: Show of Force and Use of Force are incidents where \npolice only warned or only used force in repsonse to resistance. \nTransition is incidents where police showed then used force. \nSource: Elgin police")
pScat
pScat <- ggplot(df) +
aes(Total_RTR,
value,
color = set) +
geom_point(stat="identity") +
theme_gfx()
pScat
pScat <- ggplot(df) +
aes(Total_RTR,
value,
color = set) +
geom_point(stat="identity") +
theme_gfx() +
geom_smooth(method=lm)
pScat
pScat <- pScat +
scale_y_continuous(breaks=c(seq(0,40,5)) )scale_x_discrete(
labels=c("1Q\n2014","2Q","3Q","4Q","1Q\n2015","2Q","3Q","4Q","1Q\n2016","2Q","3Q","4Q")
)
pScat <- ggplot(df) +
aes(Total_RTR,
value,
color = set) +
geom_point(stat="identity",
size=3) +
theme_gfx() +
geom_smooth(method=lm)
pScat
pScat <- pScat +
scale_x_continuous(breaks=c(seq(0,75,5)) )
pScat <- pScat +
scale_y_continuous(breaks=c(seq(0,40,5)) )
pScat <- pScat + labs(
title="Response to resistance", # your headline
subtitle="Elgin police have increased their use of\nnon-lethal force in response to resistance.",
x="YEAR, QUARTER",
y="NUMBER PER QUARTER",
caption="\nNote: Show of Force and Use of Force are incidents where \npolice only warned or only used force in repsonse to resistance. \nTransition is incidents where police showed then used force. \nSource: Elgin police")
pScat
pScat <- ggplot(df) +
aes(Total_RTR,
value,
color = set) +
geom_point(stat="identity",
size=2) +
theme_gfx() +
geom_smooth(method=lm)
pScat <- pScat +
scale_x_continuous(breaks=c(seq(0,75,5)) )
pScat <- pScat +
scale_y_continuous(breaks=c(seq(0,40,5)) )
pScat <- pScat + labs(
title="Response to resistance", # your headline
subtitle="Elgin police have increased their use of\nnon-lethal force in response to resistance.",
x="YEAR, QUARTER",
y="NUMBER PER QUARTER",
caption="\nNote: Show of Force and Use of Force are incidents where \npolice only warned or only used force in repsonse to resistance. \nTransition is incidents where police showed then used force. \nSource: Elgin police")
pScat
pScat <- pScat +
scale_x_continuous(breaks=c(seq(0,60,5)) )
pScat <- pScat +
scale_y_continuous(breaks=c(seq(0,40,5)) )
pScat <- pScat + labs(
title="Response to resistance", # your headline
subtitle="Elgin police have increased their use of\nnon-lethal force in response to resistance.",
x="YEAR, QUARTER",
y="NUMBER PER QUARTER",
caption="\nNote: Show of Force and Use of Force are incidents where \npolice only warned or only used force in repsonse to resistance. \nTransition is incidents where police showed then used force. \nSource: Elgin police")
pScat
pScat <- ggplot(df) +
aes(Total_RTR,
value,
color = set) +
geom_point(stat="identity",
size=2) +
theme_gfx() +
geom_smooth(method=lm)
# Note that there's another way to set the size of points
# and that's by using another factor to do it.
# a good example can be found here:
# http://t-redactyl.io/blog/2016/02/creating-plots-in-r-using-ggplot2-part-6-weighted-scatterplots.html
# This plots ozone levels by day, but sets the size of
# the dots by the average wind speed for the day
# Let's customize the x scale
pScat <- pScat +
scale_x_continuous(breaks=c(seq(0,60,5)) )
# Let's also customize the y scale
# we set the min and max, then where breaks should be
pScat <- pScat +
scale_y_continuous(breaks=c(seq(0,40,5)) )
# add all the titles.
pScat <- pScat + labs(
title="Response to resistance", # your headline
subtitle="Elgin police have increased their use of\nnon-lethal force in response to resistance.",
x="YEAR, QUARTER",
y="NUMBER PER QUARTER",
caption="\nNote: Show of Force and Use of Force are incidents where \npolice only warned or only used force in repsonse to resistance. \nTransition is incidents where police showed then used force. \nSource: Elgin police")
pScat
# Let's start by taking a look at the data
library(readr)
df <- read_csv("ElginUOF.csv")
summary(df)
# What we're looking at is three years of data, by quarter,
# showing how many times officers had to use physical force
# to restrain suspects, how many times they used a taser or gun
# and how many times an officer or suspect was injured
# This isn't a big dataset - there are very few rows and columns
# But that means it's also easy to understand what we're seeing
# When you start working with data that has 100s of rows and columns
# these same techniques are going to be vital to understanding
# what you have
# Right off the bat, I can see I need to create a column that
# only has years and a sort order. I don't know if I'm going to use it or not,
# but I want it.
# first I sort the data by the Year_Quarter
df <-df[order(df$Year_Quarter),]
head(df)
# add column containing the row number. We can use this to sort later
df$sort <- seq.int(nrow(df))
head(df)
# Grab just the year and put in year column as number
df$year <- as.numeric(as.character( substr(df$Year_Quarter, start=1, stop=4) ))
# Grab just the quarter and put in quarter column
df$quarter <- substr(df$Year_Quarter, start=6, stop=7)
# check the columns
names(df)
# look at df and you can see that we've got a column of years now
#--------
# There are some interesting columns in there, but I want to answer
# a question: As use of physical force increased, do injuries for officers
# and suspects also increase?
# In order to work with this, I'm going to need to create a new
# dataset and create at least one new column
# Let's create the new column. For Response to resistance, we have
# show of force only, which is basically a warning
# use of force only, which is an officer using physical technique
# like a hold, in response to resistance
# and then transition, which includes both showing and using
# But we don't have total instances where force was used.
# to do that, we need to add up transition and use of force
# and put that into a new column, we'll call it force
df$force <- df$UOF_only + df$Total_transitions
# Check DF and we can see it's at the end
# you can do that by clicking on the dataframe in
# Environment tab
# now let's create our dataset
names(df)
dfLook <- subset(df, select = c("year","Year_Quarter","force","Total_officer","Total_suspect"))
dfLook
# cool, but I've thought of another thing. Total injuries
# include major and minor injuries. Let's add those to our new df
dfLook$Officer_major <- df$Officer_mayor
dfLook$Suspect_major <- df$Suspect_major
# Now we have a smaller chunk of data to work with. let's save it
write_csv(dfLook,"dfLook.csv")
# Putting data you want to examine into its own df
# makes it far easier to manage. Now using summary we
# can see, for instance, that suspects get hurt more often than
# than officers, but offers have experience major
# injuries slightly more often.
summary(dfLook)
# let's use ggplot2 to do some visualizations
library(ggplot2)
library(ggthemes)
#---------------------
# This function set styles for the chart
# Be sure to run it before you plot
theme_gfx <- function(...) {
theme_fivethirtyeight() +
theme(
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
plot.title = element_text(size = 30),
plot.subtitle = element_text(size = 18),
legend.text=element_text(size=15),
axis.title=element_text(size=15, face="bold"),
axis.text=element_text(size=13),
plot.caption=element_text(size=12, hjust=0),
# This puts the legend across the top
legend.position="top",
legend.direction="horizontal",
# removes label for legend
legend.title = element_blank(),
...
)
}
# -----
# Looking at force vs. Officer data
qplot(force,Total_officer,
data=dfLook,
xlab="UOF incidents",
ylab="officer injuried") +
stat_smooth(method="lm") +
facet_grid(. ~ factor(Officer_major))
# using qplot, we're looking to see if there's
# a relationship between force incidents and
# number of times officers are injured
# But in this case, we've divided the data by
# whether an officer had a major injury. In our data
# either only one person was injured in a quarter or
# no officers were. So the labels of the two charts are
# 0 for none and 1 for one injury
# Take a moment to see if you get this. If we had a quarter
# where there were two injuries, we'd have a third chart with
# the dot for that quarter in it.
# but as we can see here, major injuries occured with
# relatively low number os of force incidents.
# So more force incidents did not lead to more major injuries
qplot(force,Total_officer,
data=dfLook,
xlab="UOF incidents",
ylab="officer injuried") +
stat_smooth(method="lm") +
facet_grid(. ~ factor(year))
# here we use years as the factor to split the data
# into three charts. In this case, we can see
# that as time went on there were more incidents but
# no obvious pattern of increase
# the dark area associated with the trend line is
# the 95% confidence interval. That's a prediction that
# if more data was added, 95% of it would likely fall
# within that area. As you can see, the area is pretty
# wide so there's not a lot of use in that prediction
# let's do one last exploratory chart. Let's use
# both major injuries and year as factors
qplot(force,Total_officer,
data=dfLook,
xlab="UOF incidents",
ylab="officer injuried") +
stat_smooth(method="lm") +
facet_grid(factor(Officer_major) ~ factor(year))
# the more factors you add, the more complicated the chart
# In this case we divided the data by years
# and then for each year it was divided by major/minor injuries
# Be careful with this - it can get very hard to understand
# very quickly. But it can also provide some good insights.
# In this case, we can see the number of major injuries
# decreased from the first year and stayed low.
# Imagine if this were a dataset with thousands of numbers
# and you can see how valuable this function can be
# So let's look create the plot without any factors
# First let's take a closer look at the correlation
fit_officer <- lm(force ~ Total_officer, data = dfLook)
summary(fit_officer)
# Lots to uppack here. Honestly, I am not qualified to
# explain in detail these more advanced statistic measures.
# What follows is a very over-simplified explanation.
# Generally, you want ...
# A) your Adjusted R-square to be as close to 1.00 as possible
#    here it's -0.04986. Minus is fine - negative correlation
#    But, only about 4.9 percentof the observations can be explained by
#    the relationship between the two data sets.
#    So not much of a relationship
# B) the p-value to be less that 0.05.
# HOWEVER: Don't expect too much out of these stats - we're using a very
# small dataset so it's not going to be very informative and may even
# cause confusing results. Look at the portion labeled Coefficients:
# C) Std. Error and t value. You want the t values to be as large
#    as possible versus the std errors. Neither are.
#    This is kind of like margin of error. If, for instance, a poll
#    says two candidates are at 51% vs. 49% and the margin of error is
#    five percentage points, that poll could be way off
# D) the Pr(>|t|) or p-value uses those T values and Error to compute the P-value
#    The top one is well under 0.05 (0.0081) which is good. It has ** which
#    denotes ( under signif.codes) that it's close to zero (***) in whether
#    the result is random versus signifcant
#    But the bottom one is 0.5052 with is really bad!
# ------
# Statistics is a science. Our purpose in graphing these
# values out is to see how the data relates to the
# regression line and maybe spot outliers. We will seldom use
# T values or R2 in our stories.
# But there's nothing wrong in knowing about these things. And in fact
# understanding when it's telling you that something's wrong can
# be very useful.
# Here's a link to a resource explaining what you see with the summary
# https://feliperego.github.io/blog/2015/10/23/Interpreting-Model-Output-In-R
# If you want to learn more about statistics, let me know. There's a
# good textbook I can recommend.
# Now let's draw the plot as we would if we
# were going to use it in print or online
# At the very least, it'll be something that can be saved
# and emailed if you were discussing story angles with others
officer <- ggplot(dfLook) +
aes(x=force,
y=Total_officer
) +
geom_point(stat="identity",
size = 3,
shape=21,
color="black",
aes(
fill=factor(year) ) # different colors for years
) +
geom_smooth(method=lm) +
theme_gfx()
# add all the titles.
officer <- officer +
labs(
title="Use of force and officer injuries", # your headline
subtitle="There's not much connection between \nuse of physical force and officer injuries",
x="USE OF FORCE INCIDENTS",
y="INJURIES TO OFFICERS",
caption="\nSource: Elgin police") +
scale_y_continuous(breaks=c(seq(0,10,2)) )
officer
# as we can see, there's a very slight correlation
# between the number of force incidents and injuries to
# officers. But the line only goes up very slightly - it's
# almost flat. And the 95% confidence rate is very wide
# So we can see there's not a significant correlation
# However, that doesn't mean there's not a story.
# Because we labeled the years, we can see that
# as they've increased the number of times they use
# physical response to resistance, that increase didn't
# result in a measureable increase in injuries - major or minor
# And that's a positive outcome.
# -----
# Now, in the space below, try looking at
# use of force and injuries to suspects

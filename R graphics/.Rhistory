args.legend = list(x ='bottomright', inset=0.01)
)
dev.off()
dev.cur()
png(filename = "myplotlines.png",width = 600, height = 400, units = "px")
barplot(counts, horiz=TRUE, cex.names=0.8,
main="RTR incidents by year, quarter",
xlab = "Number of incidents",
col=c("darkgreen","darkblue","red"),
legend = rownames(counts),
args.legend = list(x ='bottomright', inset=0.01)
)
dev.off()
par(las=1)
barplot(counts, horiz=TRUE, cex.names=0.8,
main="RTR incidents by year, quarter",
xlab = "Number of incidents",
col=c("darkgreen","darkblue","red"),
legend = rownames(counts),
args.legend = list(x ='bottomright', inset=0.01)
)
dev.cur()
png(filename = "myplotlines.png",width = 600, height = 400, units = "px")
par(las=1)
barplot(counts, horiz=TRUE, cex.names=0.8,
main="RTR incidents by year, quarter",
xlab = "Number of incidents",
col=c("darkgreen","darkblue","red"),
legend = rownames(counts),
args.legend = list(x ='bottomright', inset=0.01)
)
dev.off()
dev.cur()
png(filename = "myplotStackedBars.png",width = 600, height = 400, units = "px")
par(las=1)
barplot(counts, horiz=TRUE, cex.names=0.8,
main="RTR incidents by year, quarter",
xlab = "Number of incidents",
col=c("darkgreen","darkblue","red"),
legend = rownames(counts),
args.legend = list(x ='bottomright', inset=0.01)
)
dev.off()
dev.cur()
pdf(file="myplotStackedBars.pdf", width = 6, height = 4)
par(las=1)
barplot(counts, horiz=TRUE, cex.names=0.8,
main="RTR incidents by year, quarter",
xlab = "Number of incidents",
col=c("darkgreen","darkblue","red"),
legend = rownames(counts),
args.legend = list(x ='bottomright', inset=0.01)
)
dev.off()
dev.cur()
pdf(file="myplotLines.pdf", width = 4, height = 4)
plot(xrange, yrange, type="n", axes=FALSE,
xlab = "Year, Quarter", ylab = "Incidents",
main = "Total RTR incidents")
lines(df$SOF_only, type = "b", col = "orange", lwd=2)
lines(df$UOF_only, type = "b", col = "blue", lwd=2)
lines(df$Total_transitions, type = "b", col = "darkgreen", lwd=2)
axis(1, las=1, at=1:xrange[2],
tck = .05, # set the ticks to be inside plot
lab=c("","2014\n2Q","","2014\n4Q","","2015\n2Q","","2015\n4Q","","2016\n2Q","","2016\n4Q") )
axis(2, las=1, at=5*0:yrange[2], tck = 1, lty=3)
legend(1, yrange[2], c("SOF Only","UOF only", "Transition"),
cex=0.8, col=c("Orange","blue","darkgreen"), pch=21, lwd=2)
dev.off()
dev.cur()
png(filename = "myplotlines.png",width = 600, height = 400, units = "px")
plot(xrange, yrange, type="n", axes=FALSE,
xlab = "Year, Quarter", ylab = "Incidents",
main = "Total RTR incidents")
lines(df$SOF_only, type = "b", col = "orange", lwd=2)
lines(df$UOF_only, type = "b", col = "blue", lwd=2)
lines(df$Total_transitions, type = "b", col = "darkgreen", lwd=2)
axis(1, las=1, at=1:xrange[2],
tck = .05, # set the ticks to be inside plot
lab=c("","2014\n2Q","","2014\n4Q","","2015\n2Q","","2015\n4Q","","2016\n2Q","","2016\n4Q") )
axis(2, las=1, at=5*0:yrange[2], tck = 1, lty=3)
legend(1, yrange[2], c("SOF Only","UOF only", "Transition"),
cex=0.8, col=c("Orange","blue","darkgreen"), pch=21, lwd=2)
dev.off()
dev.cur()
pdf(file="myplotLines.pdf", width = 6, height = 4)
plot(xrange, yrange, type="n", axes=FALSE,
xlab = "Year, Quarter", ylab = "Incidents",
main = "Total RTR incidents")
lines(df$SOF_only, type = "b", col = "orange", lwd=2)
lines(df$UOF_only, type = "b", col = "blue", lwd=2)
lines(df$Total_transitions, type = "b", col = "darkgreen", lwd=2)
axis(1, las=1, at=1:xrange[2], tck = .05, lab=c("","2014\n2Q","","2014\n4Q","","2015\n2Q","","2015\n4Q","","2016\n2Q","","2016\n4Q") )
axis(2, las=1, at=5*0:yrange[2], tck = 1, lty=3)
legend(1, yrange[2], c("SOF Only","UOF only", "Transition"),
cex=0.8, col=c("Orange","blue","darkgreen"), pch=21, lwd=2)
dev.off()
?pch
plot(xrange, yrange, type="n", axes=FALSE,
xlab = "Year, Quarter", ylab = "Incidents",
main = "Total RTR incidents")
lines(df$SOF_only, type = "b", pch=19, col = "orange", lwd=2)
lines(df$UOF_only, type = "b", pch=19, col = "blue", lwd=2)
lines(df$Total_transitions, type = "b", pch=19, col = "darkgreen", lwd=2)
axis(1, las=1, at=1:xrange[2],
tck = .05, # set the ticks to be inside plot
lab=c("","2014\n2Q","","2014\n4Q","","2015\n2Q","","2015\n4Q","","2016\n2Q","","2016\n4Q") )
axis(2, las=1, at=5*0:yrange[2], tck = 1, lty=3)
legend(1, yrange[2], c("SOF Only","UOF only", "Transition"),
cex=0.8, col=c("Orange","blue","darkgreen"), pch=19, lwd=2)
dev.cur()
pdf(file="myplotLines.pdf", width = 6, height = 4)
plot(xrange, yrange, type="n", axes=FALSE,
xlab = "Year, Quarter", ylab = "Incidents",
main = "Total RTR incidents")
lines(df$SOF_only, type = "b", pch=19, col = "orange", lwd=2)
lines(df$UOF_only, type = "b", pch=19, col = "blue", lwd=2)
lines(df$Total_transitions, type = "b", pch=19, col = "darkgreen", lwd=2)
axis(1, las=1, at=1:xrange[2], tck = .05, lab=c("","2014\n2Q","","2014\n4Q","","2015\n2Q","","2015\n4Q","","2016\n2Q","","2016\n4Q") )
axis(2, las=1, at=5*0:yrange[2], tck = 1, lty=3)
legend(1, yrange[2], c("SOF Only","UOF only", "Transition"),
cex=0.8, col=c("Orange","blue","darkgreen"), pch=19, lwd=2)
dev.off()
png(filename = "myplotlines.png",width = 600, height = 400, units = "px")
dev.cur()
png(filename = "myplotlines.png",width = 600, height = 400, units = "px")
plot(xrange, yrange, type="n", axes=FALSE,
xlab = "Year, Quarter", ylab = "Incidents",
main = "Total RTR incidents")
lines(df$SOF_only, type = "b", pch=19, col = "orange", lwd=2)
lines(df$UOF_only, type = "b", pch=19, col = "blue", lwd=2)
lines(df$Total_transitions, type = "b", pch=19, col = "darkgreen", lwd=2)
axis(1, las=1, at=1:xrange[2], tck = .05, lab=c("","2014\n2Q","","2014\n4Q","","2015\n2Q","","2015\n4Q","","2016\n2Q","","2016\n4Q") )
axis(2, las=1, at=5*0:yrange[2], tck = 1, lty=3)
legend(1, yrange[2], c("SOF Only","UOF only", "Transition"),
cex=0.8, col=c("Orange","blue","darkgreen"), pch=19, lwd=2)
dev.off()
library(readr)
elgCrime <- read_csv("ElginUOF.csv")
ls() # lists the data sets loaded
class(elgCrime) # see's what the data is
dim(elgCrime) # finds dimensions in rows and columns
nrow(elgCrime) # finds number of rows
ncol(elgCrime) # finds number of columns
object.size(elgCrime) # size of the data set in memory used
names(elgCrime) # returns vector of column names
head(elgCrime) # looks at first six columns (with column names)
head(elgCrime, 10) # looks at first 10 rows
tail(elgCrime, 5) # looks at athe last 5 rows
table(elgCrime$Total_RTR_incidents)
str(elgCrime) # good general preview of the data
summary(elgCrime)
names(elgCrime)
hist(elgCrime$Total_RTR_incidents, breaks=10, main="Breaks = 10", col="green")
reg <- table(elgCrime$Total_RTR_incidents) # subsets a matrices
reg
barplot(reg,col="wheat",main="Number of RTR incidents")
boxplot(UOF_only~Total_RTR_incidents, data=elgCrime, col="red", xlab="Total RTR", ylab="UOF only", col.axis="blue",col.lab = "red")
title(main = "UOF in Total RTR")
elgCrime[order(elgCrime$Year_Quarter),]
elgYears <- c(2014,2014,2014,2014,2015,2015,2015,2015,2016,2016,2016,2016)
elgYears
years <- matrix(elgYears,12,1)
years
df <- cbind(years,elgCrime)
df
?readr
write_csv(df,"dfCrime.csv")
d <- density(df$Total_RTR_incidents)
plot(d, main="Total RTR incidents") # plots the results
polygon(d, col=rgb(1, 0, 0,0.5), border="red")
library(sm)
attach(df)
sm.density.compare(df$Total_RTR_incidents, df$years, xlab="Total RTR incidents", ylim= c(0,0.08))
title(main="Response to Resistance by year")
RTRyears <- factor(years, levels= c("2014","2015","2016"), labels = c("2014", "2015", "2016"))
colfill<-c( 2:( 2+length( levels(RTRyears) ) ) )
legend( "topright", levels(RTRyears), fill=colfill )
library(readr)
elgCrime <- read_csv("ElginUOF.csv")
summary(elgCrime)
with(elgCrime, plot(Total_RTR_incidents, UOF_only)) # scatter plot
title(main = "UOF vs Total RTR incidents") # adds title
abline(h=median(elgCrime$UOF_only), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$UOF_only~elgCrime$Total_RTR_incidents))
fit <- abline(lm(elgCrime$UOF_only~elgCrime$Total_RTR_incidents))
fit
fit <- lm(elgCrime$UOF_only~elgCrime$Total_RTR_incidents)
fit
summary(fit)
summary(fit)
par(mfrow=c(3,1),mar=c(4,4,2,1))
with(elgCrime, plot(Total_RTR_incidents, UOF_only)) # scatter plot
title(main = "UOF vs Total RTR incidents") # adds title
abline(h=median(elgCrime$UOF_only), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$UOF_only~elgCrime$Total_RTR_incidents))
with(elgCrime, plot(Total_RTR_incidents, SOF_only)) # scatter plot
title(main = "SOF vs Total RTR incidents") # adds title
abline(h=median(elgCrime$SOF_only), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$SOF_only~elgCrime$Total_RTR_incidents))
with(elgCrime, plot(Total_RTR_incidents, Total_transitions)) # scatter plot
title(main = "Transitions vs Total RTR incidents") # adds title
abline(h=median(elgCrime$Total_transitions), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$Total_transitions~elgCrime$Total_RTR_incidents))
dev.cur()
pdf(file="myplot.pdf", width = 4, height = 6)
par(mfrow=c(3,1),mar=c(4,4,2,1))
with(elgCrime, plot(Total_RTR_incidents, UOF_only)) # scatter plot
title(main = "UOF vs Total RTR incidents") # adds title
abline(h=median(elgCrime$UOF_only), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$UOF_only~elgCrime$Total_RTR_incidents))
with(elgCrime, plot(Total_RTR_incidents, SOF_only)) # scatter plot
title(main = "SOF vs Total RTR incidents") # adds title
abline(h=median(elgCrime$SOF_only), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$SOF_only~elgCrime$Total_RTR_incidents))
with(elgCrime, plot(Total_RTR_incidents, Total_transitions)) # scatter plot
title(main = "Transitions vs Total RTR incidents") # adds title
abline(h=median(elgCrime$Total_transitions), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$Total_transitions~elgCrime$Total_RTR_incidents))
dev.off() # Then turn off dev and you can view the plot
library(readr)
df <- read_csv("dfCrime.csv")
names(df)
summary(df)
library(lattice)
panel.smoother <- function(x, y) {
panel.xyplot(x, y) # show points
panel.loess(x, y)  # show smoothed line
}
attach(df)
xyplot(UOF_only~SOF_only|Total_RTR_incidents*Total_arrests,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
xyplot(UOF_only~SOF_only|Total_RTR_incidents,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
xyplot(UOF_only~SOF_only|Total_RTR_incidents,
main="Scatterplots by total RTR",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~Total_RTR_incidents,
main="Scatterplots by total RTR",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~Total_RTR_incidents|Total_arrests,
main="Scatterplots by total RTR",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~SOF_only|Total_arrests,
main="Scatterplots by total RTR",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~SOF_only|Total_RTR_incidents,
main="Scatterplots by total RTR",
ylab="UOF", xlab="SOF")
hp <- cut(Total_RTR_incidents,4)
xyplot(UOF_only~SOF_only|hp,
main="Scatterplots by total RTR",
ylab="UOF", xlab="SOF")
xyplot(Total_RTR_incidents~SOF_only|UOF_only,
main="Scatterplots by total RTR",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~SOF_only|years,
main="Scatterplots by total RTR",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~SOF_only|years,
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
xyplot(df$UOF_only~df$SOF_only|df$years,
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~SOF_only|years, data=df,
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~SOF_only|factor(years), data=df,
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
?lattice
?panel
?panel
??panel
library(readr)
df <- read_csv("dfCrime.csv")
names(df)
summary(df)
library(lattice)
xyplot(UOF_only~SOF_only|factor(years), data=df,
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
library(readr)
df <- read_csv("dfCrime.csv")
names(df)
summary(df)
library(lattice)
xyplot(UOF_only~SOF_only|factor(years), data=df,
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~SOF_only|factor(years), data=df, type=c("p", "r"),
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~SOF_only|factor(years), data=df, type=c("r"),
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~SOF_only|factor(years), data=df, type=c("p", "r"),
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
library(readr)
elgCrime <- read_csv("ElginUOF.csv")
ls() # lists the data sets loaded
class(elgCrime) # see's what the data is
dim(elgCrime) # finds dimensions in rows and columns
nrow(elgCrime) # finds number of rows
ncol(elgCrime) # finds number of columns
object.size(elgCrime) # size of the data set in memory used
names(elgCrime) # returns vector of column names
head(elgCrime) # looks at first six columns (with column names)
head(elgCrime, 10) # looks at first 10 rows
tail(elgCrime, 5) # looks at athe last 5 rows
table(elgCrime$Total_RTR_incidents)
str(elgCrime) # good general preview of the data
summary(elgCrime)
names(elgCrime)
hist(elgCrime$Total_RTR_incidents, breaks=10, main="Breaks = 10", col="green")
reg <- table(elgCrime$Total_RTR_incidents) # subsets a matrices
reg
barplot(reg,col="wheat",main="Number of RTR incidents")
boxplot(UOF_only~Total_RTR_incidents, data=elgCrime, col="red", xlab="Total RTR", ylab="UOF only", col.axis="blue",col.lab = "red")
title(main = "UOF in Total RTR")
elgCrime[order(elgCrime$Year_Quarter),]
elgYears <- c(2014,2014,2014,2014,2015,2015,2015,2015,2016,2016,2016,2016)
elgYears
years <- matrix(elgYears,12,1)
years
df <- cbind(years,elgCrime)
df
?readr
write_csv(df,"dfCrime.csv")
d <- density(df$Total_RTR_incidents)
plot(d, main="Total RTR incidents") # plots the results
polygon(d, col=rgb(1, 0, 0,0.5), border="red")
library(sm)
attach(df)
sm.density.compare(df$Total_RTR_incidents, df$years, xlab="Total RTR incidents", ylim= c(0,0.08))
title(main="Response to Resistance by year")
RTRyears <- factor(years, levels= c("2014","2015","2016"), labels = c("2014", "2015", "2016"))
colfill<-c( 2:( 2+length( levels(RTRyears) ) ) )
legend( "topright", levels(RTRyears), fill=colfill )
library(readr)
elgCrime <- read_csv("ElginUOF.csv")
summary(elgCrime)
with(elgCrime, plot(Total_RTR_incidents, UOF_only)) # scatter plot
title(main = "UOF vs Total RTR incidents") # adds title
abline(h=median(elgCrime$UOF_only), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
fit <- lm(elgCrime$UOF_only~elgCrime$Total_RTR_incidents)
summary(fit)
abline(fit)
par(mfrow=c(3,1),mar=c(4,4,2,1))
with(elgCrime, plot(Total_RTR_incidents, UOF_only)) # scatter plot
title(main = "UOF vs Total RTR incidents") # adds title
abline(h=median(elgCrime$UOF_only), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$UOF_only~elgCrime$Total_RTR_incidents))
with(elgCrime, plot(Total_RTR_incidents, SOF_only)) # scatter plot
title(main = "SOF vs Total RTR incidents") # adds title
abline(h=median(elgCrime$SOF_only), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$SOF_only~elgCrime$Total_RTR_incidents))
with(elgCrime, plot(Total_RTR_incidents, Total_transitions)) # scatter plot
title(main = "Transitions vs Total RTR incidents") # adds title
abline(h=median(elgCrime$Total_transitions), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$Total_transitions~elgCrime$Total_RTR_incidents))
dev.cur()
pdf(file="myplot.pdf", width = 4, height = 6)
par(mfrow=c(3,1),mar=c(4,4,2,1))
with(elgCrime, plot(Total_RTR_incidents, UOF_only)) # scatter plot
title(main = "UOF vs Total RTR incidents") # adds title
abline(h=median(elgCrime$UOF_only), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$UOF_only~elgCrime$Total_RTR_incidents))
with(elgCrime, plot(Total_RTR_incidents, SOF_only)) # scatter plot
title(main = "SOF vs Total RTR incidents") # adds title
abline(h=median(elgCrime$SOF_only), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$SOF_only~elgCrime$Total_RTR_incidents))
with(elgCrime, plot(Total_RTR_incidents, Total_transitions)) # scatter plot
title(main = "Transitions vs Total RTR incidents") # adds title
abline(h=median(elgCrime$Total_transitions), lty=2, lwd=2)
abline(v=median(elgCrime$Total_RTR_incidents), lwd=2, col="red")
abline(lm(elgCrime$Total_transitions~elgCrime$Total_RTR_incidents))
dev.off() # Then turn off dev and you can view the plot
xyplot(c(UOF_only~SOF_only,UOF_only~Total_transitions)|factor(years), data=df, type=c("p", "r"),
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
xyplot(UOF_only~SOF_only|factor(years), data=df, type=c("p", "r"),
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
library(lattice)
xyplot(UOF_only~SOF_only|factor(years), data=df, type=c("p", "r"),
main="UOF v SOF by year",
ylab="UOF", xlab="SOF")
library(readr)
df <- read_csv("dfCrime.csv")
names(df)
summary(df)
library(ggplot2)
library(ggthemes)
forceData <- matrix(c(df$SOF_only,df$UOF_only,df$Total_transitions),ncol=3)
colnames(forceData)=c("SOF_only","UOF_only","Transitions")
rownames(forceData)=df$Year_Quarter
forceData
p1 <- ggplot() + geom_line(aes(y = UOF_only, x = Year_Quarter, colour = product),
data = forceData, stat="identity")
p1
p1 <- ggplot() + geom_line(aes(y = df$UOF_only, x = df$Year_Quarter),
data = df$Total_RTR_incidents, stat="identity")
p1
df1 <- read.csv("dfCrime.csv")
names(df1)
summary(df1)
p1 <- ggplot() + geom_line(), data = df1$Total_RTR_incidents)
p1 <- ggplot() + geom_line() data = df1$Total_RTR_incidents)
p1 <- ggplot() + geom_line(aes(), data = df1$Total_RTR_incidents, stat="identity")
yrange <- range(0,df$SOF_only,df$UOF_only,df$Total_transitions)
yrange
p1 <- ggplot(subset(UOF_only, SOF_only, Total_transitions),
aes(x=Year_quarter,
y= yrange)) +
geom_line()
p1 <- ggplot(subset(df, c(UOF_only, SOF_only, Total_transitions)),
aes(x=Year_quarter,
y= yrange)) +
geom_line()
p1 <- ggplot(subset(df, year %in% c("2014", "2015", "2016")),
aes(x=Year_quarter,
y= yrange)) +
geom_line()
p1 <- ggplot(subset(df, years %in% c("2014", "2015", "2016")),
aes(x=Year_quarter,
y= yrange)) +
geom_line()
p1
p1 <- ggplot(subset(df, years %in% c("2014", "2015", "2016")),
aes(x=Year_Quarter,
y= yrange)) +
geom_line()
p1
p1 <- ggplot(subset(df, years %in% c("2014", "2015", "2016")),
aes(x=1,
y=1)) +
geom_line()
p1
p1 <- ggplot(subset(df, years %in% c("2014", "2015", "2016")),
aes(x=0:12,
y=0:40)) +
geom_line()
p1
p1 <- ggplot(subset(df, years %in% c("2014", "2015", "2016")),
aes(x=c(0:12),
y=c(0:40)
)) +
geom_line()
p1
p1 <- ggplot(subset(df, years %in% c("2014", "2015", "2016")),
aes(x=12,
y=c(0:40)
)) +
geom_line()
p1
p1 <- ggplot(subset(df, years %in% c("2014", "2015", "2016")),
aes(x=UOF_only,
y=Year_Quarter)
) +
geom_line()
p1
p1 <- ggplot(df, aes(x = Year_Quarter, y = UOF_only))
p1 + geom_line(aes(color = Years))
p1 + geom_line(aes(color = years))
p1
p1 <- ggplot(df, aes(x = Year_Quarter, y = UOF_only))
p1 + geom_line(aes(color = years))
p1
p1 <- ggplot(df, aes(x = Year_Quarter, y = UOF_only))
p1 + geom_line()
p1 <- ggplot(df, aes(UOF_only,Total_RTR_incidents))
p1
p1 + geom_line(aes(color = years))
p1 + geom_line()
p1 + geom_line(aes(color = "Red"))
p1 + geom_point(aes(color = "Red"))
p1 + geom_point(aes(color = "Red")) + geom_line()
p1 + geom_point(aes(color = factor(years))) + geom_line()
p1 + geom_point(aes(color = factor(years))) + geom_line(aes(color = factor(years)))
p1 <- ggplot(df, aes(UOF_only,Total_RTR_incidents, color = factor(years)))
p1 + geom_point() + geom_line()
p2 <- ggplot(df, aes(UOF_only,Total_RTR_incidents))
p + geom_point() + stat_smooth()
p2 + geom_point() + stat_smooth()
p2 <- ggplot(df, aes(Total_RTR_incidents,UOF_only))
p2 + geom_point() + stat_smooth()
p1 <- ggplot(df, aes(Total_RTR_incidents, UOF_only, color = factor(years)))
p1 + geom_point() + geom_line()
p3 <- ggplot(df, aes(Total_RTR_incidents,UOF_only)) + stat_summary(fun.y = median, geom = "bar")
p3
p3 <- ggplot(df, aes(year,UOF_only)) + stat_summary(fun.y = median, geom = "bar")
p3
p3 <- ggplot(df, aes(years,UOF_only)) + stat_summary(fun.y = median, geom = "bar")
p3
